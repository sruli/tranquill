steps:
- name: 'gcr.io/$PROJECT_ID/docker-compose'
  args: ['up', '-d', '--build', '--force-recreate']
  env:
  - 'NODE_ENV=development'
  - 'CLIENT_PORT=3000'
  - 'API_PORT=8080'
  - 'REACT_APP_ENV=test'
  - 'REACT_APP_API_URL=http://localhost:8080'
  - 'MONGO_DB_URL=mongodb://mongodb:27017/tranquill_test'
  - 'MONGO_DB_NAME=tranquill_test'
  - 'MONGO_DB_PORT=27017'
  - 'API_URL=http://localhost:8080'
  - 'CLIENT_URL=http://localhost:3000'
  - 'CLIENT_HOST=localhost'
  - 'JWT_SECRET=secret'
  - 'REDIS_HOST=redis'
  - 'REDIS_DB=1'
  - 'REDIS_PORT=6379'
  id: 'docker-compose'

- name: 'gcr.io/$PROJECT_ID/docker-compose'
  args: ['exec', '-T', 'api', 'npm', 'test']
  env:
  - 'CLIENT_PORT=3000'
  - 'API_PORT=8080'
  - 'NODE_ENV=test'
  - 'REACT_APP_ENV=test'
  - 'REACT_APP_API_URL=http://localhost:8080'
  - 'MONGO_DB_URL=mongodb://mongodb:27017/tranquill_test'
  - 'MONGO_DB_NAME=tranquill_test'
  - 'MONGO_DB_PORT=27017'
  - 'API_URL=http://localhost:8080'
  - 'CLIENT_URL=http://localhost:3000'
  - 'CLIENT_HOST=localhost'
  - 'JWT_SECRET=secret'
  - 'REDIS_HOST=redis'
  - 'REDIS_DB=1'
  - 'REDIS_PORT=6379'
  id: 'test-api'
  waitFor: ['docker-compose']

- name: 'gcr.io/$PROJECT_ID/docker-compose'
  args: ['exec', '-T', 'client', 'npm', 'test']
  env:
  - 'CLIENT_PORT=3000'
  - 'API_PORT=8080'
  - 'NODE_ENV=test'
  - 'REACT_APP_ENV=test'
  - 'REACT_APP_API_URL=http://localhost:8080'
  - 'MONGO_DB_URL=mongodb://mongodb:27017/tranquill_test'
  - 'MONGO_DB_NAME=tranquill_test'
  - 'MONGO_DB_PORT=27017'
  - 'API_URL=http://localhost:8080'
  - 'CLIENT_URL=http://localhost:3000'
  - 'CLIENT_HOST=localhost'
  - 'JWT_SECRET=secret'
  - 'REDIS_HOST=redis'
  - 'REDIS_DB=1'
  - 'REDIS_PORT=6379'
  id: 'test-client'
  waitFor: ['docker-compose']

- name: 'gcr.io/cloud-builders/npm'
  args: ['install']
  dir: 'client'
  id: 'client-npm-install'
  waitFor: ['test-client', 'test-api']

- name: 'gcr.io/cloud-builders/npm'
  args: ['run', 'build']
  dir: 'client'
  env:
  - 'REACT_APP_ENV=staging'
  - 'REACT_APP_API_URL=https://staging-api.tranquillapp.com'
  id: 'build-client-bundle'
  waitFor: ['client-npm-install']

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us.gcr.io/$PROJECT_ID/staging_client:$REVISION_ID', '.']
  dir: 'client'
  id: 'build-client-image'
  waitFor: ['build-client-bundle']

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us.gcr.io/$PROJECT_ID/staging_client:$REVISION_ID']
  dir: 'client'
  id: 'push-client-image'
  waitFor: ['build-client-image']

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us.gcr.io/$PROJECT_ID/staging_api:$REVISION_ID', '.']
  dir: 'api'
  id: 'build-api-image'
  waitFor: ['test-client', 'test-api']

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us.gcr.io/$PROJECT_ID/staging_api:$REVISION_ID']
  dir: 'api'
  id: 'push-api-image'
  waitFor: ['build-api-image']

- name: 'gcr.io/cloud-builders/kubectl'
  args: ['set', 'image', 'deployment/staging-client', 'staging-client=us.gcr.io/$PROJECT_ID/staging_client:$REVISION_ID']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-east4-c'
  - 'CLOUDSDK_CONTAINER_CLUSTER=tranquill'
  dir: 'client'
  waitFor: ['push-client-image', 'push-api-image']

- name: 'gcr.io/cloud-builders/kubectl'
  args: ['set', 'image', 'deployment/staging-api', 'staging-api=us.gcr.io/$PROJECT_ID/staging_api:$REVISION_ID']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-east4-c'
  - 'CLOUDSDK_CONTAINER_CLUSTER=tranquill'
  dir: 'api'
  waitFor: ['push-client-image', 'push-api-image']

images:
  ['us.gcr.io/$PROJECT_ID/staging_client:$REVISION_ID', 'us.gcr.io/$PROJECT_ID/staging_api:$REVISION_ID']

tags: ['${_ENV}']
